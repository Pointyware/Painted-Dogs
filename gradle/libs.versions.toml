[versions]
agp = "8.11.1"
androidx-activityCompose = "1.10.1"
androidx-compose = "1.9.0"
androidx-material3 = "1.3.2"
compose = "1.8.2"
compose-navigation = "2.9.0-beta04"
compose-viewmodels = "2.9.1"
dokka = "2.0.0"
jupiter = "5.13.4"
kass = "0.4.1"
koin = "4.1.0"
koin-bom = "4.1.0"
kotlin = "2.2.0"
kotlinx = "1.10.2"
kotlinx-datetime = "0.7.1"
kotlinx-coroutines = "1.10.2"
kover = "0.9.1"
ksp = "2.2.0-2.0.2"
ktor = "3.2.3"
mockative = "3.0.1"
mockk = "1.14.5"
truth = "1.4.4"

[libraries]
androidx-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-ui = { module = "androidx.compose.ui:ui", version.ref = "androidx-compose" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "androidx-compose" }
androidx-uiTooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "androidx-compose" }
androidx-uiToolingPreview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "androidx-compose" }
androidx-composeMaterial3 = { module = "androidx.compose.material3:material3", version.ref = "androidx-material3" }

compose-navigation = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "compose-navigation" }
compose-backhandler = { module = "org.jetbrains.compose.ui:ui-backhandler", version.ref = "compose" }
compose-viewModels = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "compose-viewmodels" }

jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "jupiter" }

koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-bom = { module = "io.insert-koin:koin-bom", version.ref = "koin-bom" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-coroutines = { module = "io.insert-koin:koin-core-coroutines", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
koin-ktor = { module = "io.insert-koin:koin-ktor" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }

kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlinx-dateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutinesAndroid = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx"}
kotlinx-coroutinesCore = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx"}
kotlinx-coroutinesSwing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx"}
kotlinx-coroutinesTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization", version.ref = "kotlinx" }

ktor-clientCore = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-clientOkhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-clientDarwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-clientLogging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-clientResources = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }
ktor-serializationKotlinxJson = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-clientContentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }

mockative = { module = "io.mockative:mockative", version.ref = "mockative" }
mockativeSymbolProcessor = { module = "io.mockative:mockative-processor", version.ref = "mockative" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

pointyware-kass = { module = "org.pointyware.kass:assertions", version.ref = "kass" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }

[plugins]
androidApplication  = { id = "com.android.application", version.ref = "agp" }
androidLibrary      = { id = "com.android.library", version.ref = "agp" }
composeHelper = { id = "org.jetbrains.compose", version.ref = "compose" }
composeMultiplatform = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
kotlinAndroid       = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinJvm           = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinxKover            = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
ksp                 = { id = "com.google.devtools.ksp", version.ref = "ksp" }
ktor                = { id = "io.ktor.plugin", version.ref = "ktor" }

painteddogs-koin = { id = "org.pointyware.painteddogs.koin-dependency-injection-convention", version = "0.1.0" }
painteddogs-kmp = { id = "org.pointyware.painteddogs.kmp-convention", version = "0.1.0" }
painteddogs-compose = { id = "org.pointyware.painteddogs.compose-convention", version = "0.1.0" }
painteddogs-coreProjects = { id = "org.pointyware.painteddogs.core-projects-convention", version = "0.1.0" }
